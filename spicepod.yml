# _ yaml-language-server: $schema=./spicepod.schema.json

name: "@ewgenius/demo"
description: my spicepod
version: v1beta1
kind: Spicepod

metadata:
  epoch_time: 1605312000
  period: 72h
  interval: 1m
  granularity: 10s
  episodes: 10

datasets:
  - name: uniswap_v2_eth_usdc
    type: append
  - from: datasets/uniswap_v2_eth_usdc
  - from: datasets/dataset_1
  - from: datasets/dataset_2

functions:
  - name: uniswap_predictions_processor
    output_datasets:
      - test
    triggers:
      - path: test
    runtime: python3.11
    handler: spice_function.process

  - from: functions/function_1
    dependsOn:
      - datasets/dataset_1
      - datasets/dataset_2

models:
  - name: gas_fees
    family: gas_fees
    model_type: gasfees_v1
    handler: gas_fees.py
    training_entry_point: gas_fees.train
    inference_entry_point: gas_fees.infer
    training_query: 'WITH counts AS (    SELECT block_number, count(1) as "count" FROM eth.recent_transactions GROUP BY block_number  )  SELECT number as "ts", CAST(b.base_fee_per_gas / 1000000000.0 AS DOUBLE) as "y", CAST(c."count" AS DOUBLE) as "y2"  FROM eth.recent_blocks b  INNER JOIN counts c ON b.number = c.block_number  WHERE b.base_fee_per_gas IS NOT NULL ORDER BY block_number DESC LIMIT 500'
    inference_query: 'SELECT number as "ts", CAST(base_fee_per_gas / 1000000000.0 AS DOUBLE) as "y", CAST(transaction_count AS DOUBLE) as "y2" from eth.recent_blocks WHERE base_fee_per_gas IS NOT NULL ORDER BY ts DESC LIMIT 35'
    lookback_size: 30
    forecast_size: 1
    metadata:
      firecache: true
      covariate: true

  - from: models/gas_fees_v2

dependencies:
  - lukekim/demo
  - spiceai/datasets
